This file contains all new options for RDBJAG (PC & ATARI versions) made
since the PC version is released:

New command line options:

	You can now enter rdbjag [-ifpdz] filename, where filename is the
	name of a .ABS file. The .ABS extension may be omitted.

	You also can now enter rdbjag [-ifpdz] filename, where filename is a
	.DB file. Note that in that case, the .DB extension must be entered.

	One can now type rdbjag -g to perform auto go. This is usually used
	with a program/script name, like: rdbjag -g <myprog>.

	For the PC version:
	- By default, rdbjag.exe will test your parallel boards to find a
	bidirectionnal one, and assume the first bidirectionnal port found
	is the Jaguar one. Note that this test may garbage the configuration
	of other parallel boards and could lead the printer to malfunction.
	(This should not happen, but who knows..).
	- The -p[1-3] witch allows user to specify a parallel port to be
	used. 
	- The -d switch, used with the -p switch, tells rdbjag.exe to not
	test the parallel port at all, assuming the port is really
	bidirectionnal. Use it to avoid problems with printer ports or if
	your parallel board is not recognized well enough. (For instance I
	use 'rdbjag -p1 -d turtdemo.abs').


Line editing and Prompt:

	New line editing with arrows, delete, scrolling and history.
	A prompt now appears on each line . 'Db:' for standard input,
	'Proc:' for procedure input and 'Set:' for setting values input.
	There is no history for the two last modes. The history size is
	100 lines for standard input. Use up and down arrow keys to get
	history. Line editing uses right and left arrow keys, DEL and BS.

	TAB now completes the expression in input from the cursor position.
	If there is no space before the cursor position, it will try to
	complete from the commands table, if there is a command before the
	cursor position, it will complete the word under the cursor from
	whatever the command is about (i.e: 'aread turt<TAB>' will expand in
	'aread turtdemo.abs', and 'help are<TAB>' will expand in 'help aread').
	TAB TAB show all occurences found if more than one ('a la' gdb).
	If RDBJAG find debugging informations in the .ABS file read, TAB
	and TAB TAB will also expand the symbols.

	Thus, no more key binding is allowed for BS, ^@ TAB and ESC as these 
	keys are used for line editing purposes.


New AREAD function:

	To avoid the FILEFIX step after linking is done, a new function is
	provided. It loads a .ABS file directly from the command line. The
	syntax is only 'aread filename'. Note that the .ABS extension may be
	omitted. This function can also be called directly from the DOS (TOS)
	command line simply by entering the filename of the .ABS file after
	<rdbjag>. ABS files recognised can be of DRI absolute file format or
	COFF file format.

New Z function:

	This will skip the next CPU instruction.
	z <count> will skip the next <count> instructions.

New source-level handling:

	Four new functions have been added for source-level handling:

	- LS is the same function as L, but lists the source code instead of
	disassembly.
	Usage is:
		ls <addr> prints the source corresponding to <addr>
		ls :<#>    prints the current source file from line <#>
		ls <fname>:<#> same as above for source file <fname>
		ls <fname>: prints source file <fname> from current line #.

	- MLIST  prints a list of all source files loaded in memory

 	- MPURGE unload source file(s) for small memory configurations.
	Usage is:
	  mpurge <fname> will purge source file <fname> from memory.
	  mpurge * will purge all source files from memory.

	-N
	This will step to the next source line.

	Everywhere an address can be entered in rdbjag, you now can also use
	debug symbols. For example one can enter 'ls main' to list the
	source code from the 'main' label, or 'l main' to disassemble from
	the 'main' label.

	When rdbjag finds source-level informations in a .ABS file, some
	functions will add source informations to their outputs:
	- after registers display (eg: 'x' but also 't', 'g' etc...).
  	- the 'b' command recognizes the same syntax as 'ls'.
 	- in breakpoints list.

	The "tabstop" variable has been added. One can change it with
	"set tabstop #" (# is the new tab value). This is used in source
	level and disassembly displays (at least). Default value: 8.

	The "disaddr" variable has been added. It contains the current
	disassembly address ('l' and 'l disaddr' do the same).

	The "dissize" variable has been added. It contains the current
	disassembly size. (Useful mainly in scripts).

	The "dislab" variable has been added. 0 means old fashion labels
	disassembly. (See below: Changes from old rdbjag). Default: 1.

	The "dislnb" variable has been added. It contains the disassembly
	and source level lines number. Default: 10.

	The "srclevel" variable has been added. It forbids source level
	management if set to 0. Default: 1. (Wish from Robert Dibley,
	Rebellion Software).

Various changes from the old rdbjag:

	- Breakpoints and checkpoints are now deleted from the Stub each time
	Rdbjag is launched.

	- A pager has been added when more than one page is to be displayed.
	Hitting 'Q' or 'Ctrl-C' will abort the command output.

	- A '>' has been added in disassembly mode. It shows the actual 68K
	PC value. (It is also present in source level mode). It is switched
	to '<' before a branch instruction if it will branch.

	- A '@' has been added in disassembly mode. It means that there is
	a breakpoint at this address. (It is also present in source level mode).

	- Labels are now integrated into the disassembly. I.e:
	move.l	$12345678,$87654321	LAB1, LAB2	;old fashion
	move.l	LAB1,LAB2				;now
	Set the variable <dislab> to 0 if you want old fashion.

	- Certainly some more I forgot. Find them and win a pack of beer :-)


! In order to have unrestricted label names (ie more than 8), you MUST use:
  MADMAC with -fb
  ALN with -e
  (please see corresponding documentation for MADMAC and ALN).

! In order to have the source level in your programs, you MUST use:
  MADMAC with -fb -g
  ALN with -e -g
  (Be sure to have your sources in the partition where RDBJAG lives)
  (please see corresponding documentation for MADMAC and ALN).

! GPU/DSP source-level is now done. Of course there will be
  always a problem if more than one ORG points to the same address. Maybe an
  external mapping could resolve this problem, but it would be hard to
  use.
 
! In order to have rdbjag finding files in other directory than the current
  one you must set DBPATH to the directory you want it to look at after the
  current one. (I know this sentence is not in real english. I do my best:-))

! Under MS/DOS, rdbjag can directly change the screen resolution.
  Add the following line to your AUTOEXEC.BAT:
  set GO32=TW xx TH yy
  where xx is the columns number (e.g.: 132)
  and yy is the lines number (e.g.: 43).
  This is no more true for the moment! (29/04/94).

Brainstorm, 24/03/94
