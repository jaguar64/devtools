{\rtf0\pc\deff709{\fonttbl{\f709\fnil Bitstream Charter Black;}{\f648\fnil Bitstream Charter;}{\f596\fnil Monospace 821;}}\nofpages3\deftab720\paperw11520\paperh15263\margl1080\margr1080\margt1080\margb1080\pgnstart1\pgndec\sectd\cols1\headery720\footery720 \pard\qc\fi0\li0\ri-5\plain\f709\fs22 The Jaguar Music Driver\par\pard\ql\fi0\li0\ri-5\plain\f709\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The Jaguar Music driver is an extension to the sound system described in the document \f709 The Jaguar Synth. \f648 It is assumed that the reader is familiar with that document. In either case, the code is the same, FULSYN. The only difference is that one of Jerry's timers is used to run a real time interpreter of massaged MIDI data. This is then used to automatically turn the first n voices on and off. This requires the voicetable to be at least n entries in length. The number of voices used is set in the file parse.cnf. For simplicity, this document will assume that n=8. The sample rate of the underlying synth is assumed to be the default ~20kHz. If this is changed then a new copy of notes.cnf must be generated.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The system is used as follows:\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 1) A MIDI file is created in file 0 format with no more than 8 note polyphony. This file is converted to a simplified format by the program PARSE, just type 'parse filename.mid'. The output file is ALWAYS called test.out. When PARSE runs it produces a description of the file to standard out. This should usually be redirected to a file. PARSE also reads a file named parse.cnf. This file is used to create patch maps. The default mapping is for all channels to map to the patch at their channel number (see the provided parse.cnf for the format). Looping in the MIDI file is supported using the following controller events: Controller 12 marks loop targets, the value on controller 12 is the target number; Controller 13 selects a loop target and should be followed immediately by a Controller 14 event that gives the number of times to loop. There is no command to loop forever. A comment is inserted into test.out that can be made into a label so that loop counts can be reset to loop more than 255 times. For more information see the format of the music events at the end of this document.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 2) A set of patches and envelopes are created using the format described in \f709 The Jaguar Synth \f648 for voicetable entries, with a few differences.\par\pard\ql\fi0\li362\ri-5\plain\f648\fs22 a) In all of the FM modulation frequency controls, the rate may be made proportional to the pitch of the note or left absolute. This is controlled by the high order bit of the frequency. The relative frequency is a 23:8 integer:fraction number. For example the value $80000100 results in the modulation frequency being the same as the pitch.\par\pard\ql\fi0\li362\ri-5\plain\f648\fs22 b) A new parameter, the envelope/sample end point, is specified in the patch at the following locations:\par\pard\ql\fi0\li362\ri-5\plain\f648\fs22 Module\tab Offset\par\pard\ql\fi0\li362\ri-5\tqc\tx1307\plain\f648\fs22 Samplers\tab 8\par\pard\ql\fi0\li362\ri-5\tqc\tx1307\plain\f648\fs22 Waveform\tab 10\par\pard\ql\fi0\li362\ri-5\tqc\tx1307\plain\f648\fs22 FM/Env\tab 15\par\pard\ql\fi0\li362\ri-5\tqc\tx1307\plain\f648\fs22 c) For all samplers, the pitch may be adjusted by a factor placed in the pitch parameter of the patch. The value $1000 means no change, $800 drops the pitch by a factor of 2 (one octave) and a value of $2000 raises the pitch by a factor of 2.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 3) The files are built into a program (see below)\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 4) The program is run and out comes the music.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The program PARSE converts the MIDI file into dc.l source. It is assembled and converted to a .scr file. At this time PARSE and the interpreter understand note on/off, tempo change and looping. Patch change, pitch bend and pan are to be added (real) soon (now).\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The system assumes envelopes are also provided as dc.l source. These are assembled and loaded \page into the DSP.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The Jaguar sound system may be thought of as having two separate components; a synthesizer and a music interpreter. These two sections are quite independant, although the second requires the first to actually generate sound.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 To use the system, follow these steps. For clarity follow along in the sample code (test.s), Load the DSP code into DSPRAM, set up a voicetable, turn on the I\fs16\up4 2\fs22\up0 S port, start the DSP and turn off mute. The system is now ready for use as a synth. This functionality is primarily intended for interactive sounds.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 To turn on the music interpreter set SCORE_ADD to the location of the tokenized music (this must be a long aligned address), set TIMER_ADD to 0, start the timer and out comes music.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The remaining code shows how to add in custom effects.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 To play music and sound effects simultaneously make sure that you restrict sound effects to the  voice table entries that the music interpreter does not use.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri357\plain\f648\fs24 During each sample period the synth goes thru the voice tables (starting at TABLESTART) and checks the first longword of each voice table to find out which synth module to use next.\par\pard\ql\fi0\li0\ri357\plain\f648\fs24 The Music driver interprets a structure in memory to manipulate entries in the voice table. This structure is created by the program PARSE. A list is kept by the parser of all voices that are in use and a warning is given if the desired polyphony fails to accommodate the needs of the MIDI file being parsed. The voice assigned to a note on event is determined by taking the last used voice, adding one until an available voice is found.\par\pard\ql\fi0\li0\ri357\plain\f648\fs24 At any given time the voice table can be quite complex. A representative voice table follows (showing only the voice type in detail):\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 -4\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 8\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 12\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 28\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 -4\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 -4\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 -4\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 16\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 -4\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 24\tab x x x ...x\par\pard\ql\fi0\li0\ri357\tx314\plain\f648\fs24 0\par\pard\ql\fi0\li0\ri357\plain\f648\fs24 This type of table would be expected while playing an eight voice music file with two channels reserved for sound effects.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 More details may be found in the example files.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 The Music event format:\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 Each event consists of two long words. The first long is the time (in milliseconds) from the start of the song the the event is scheduled for (this limits the length of any individual tune, without loops, to about 6 weeks). The next long is the actual event encoded as follows.\par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \par\pard\ql\fi0\li0\ri357\plain\f596\fs20  Coded events look like this:\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  EEEV|VVxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  EEE = Event type\par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab 1xx NOTE ON\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  1xxV|VVPP|PPPF|FFFF|FFFF|FFFF|FAAA|AAAA\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab V|VV = Voice number\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab PP|PPP = Patch number\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab F|FFFF|FFFF|FFFF|F = Frequency\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab AAA|AAAA = Amplitude\par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab 000 NOTE OFF\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  000V|VVxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  \tab V|VV = Voice number\par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \tab 011 JUMP WITH COUNT\par\pard\ql\fi0\li0\ri357\plain\f596\fs20  011D|DDDD|DDDD|DDDD|DDDD|DDDD|CCCC|CCCC\par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \tab CCCC|CCCC is number of loops played\par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \tab D|DDDD|DDDD|DDDD|DDDD|DDDD\par\pard\ql\fi0\li0\ri357\plain\f596\fs20 \tab \tab is the number of phrases to jump\par\pard\ql\fi0\li0\ri-5\plain\f596\fs20 \par\pard\ql\fi0\li0\ri-5\plain\f648\fs22 \sect}