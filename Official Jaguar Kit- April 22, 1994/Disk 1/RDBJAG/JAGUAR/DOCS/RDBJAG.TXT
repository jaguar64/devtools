
Notes on RDB:
RDB expects a bidirectionnal parallel port on LPT1, LPT2 or LPT3.
If you have other(s) monodirectionnal parallel port(s), it will automatically
recognize the right one.
If you have more than one bidirectionnal port and the Jag is not on the first
one, you can tell rdb what port to use. the switch is -p (-p1 -p2 or -p3).


New features for 0.91:
Line editing and Prompt:
	New line editing with arrows, delete, scrolling and history.
	A prompt now appears on each line . 'Db:' for standard input,
	'Proc:' for procedure input and 'Set:' for setting values input.
	There is no history for the two last modes. The history size is
	100 lines for standard input.
	Thus, no more key binding is allowed for :
	TAB, because we'll soon add an automated completion with it,
	BS, ^@ and ESC for line editing purposes.

Last command recall:
	When a single <cr> is entered while in standard input, the last
	command	stored is executed again if it's logical (that is, for
	example, 'load' wont be stored, 'l' will be without parameters and
	'help' will be with parameters).

New features for 0.92:
TAB now completes the expression in input.
	It tries to make an 'intelligent' completion, i.e if getting the
	first word of a command, it will expand from the command table if
	it finds anything then from the variables table. If it's the second
	word it tries variables first, then commands.
	TAB TAB show all occurences found if more than one ('a la' gdb).

Fixed a bug in creating files for transcript and save commands.
Added a very dumb 'more' for the help command.
Fixed a bug in GPU MOVEI disassembly.

New features for 0.93:
Cleanup of parallel board detection. Basically the detection is:
	1/ Is there a parallel port ? Try to put the port in standard mode
	   and write a byte in it. If we can read this byte after writing in
	   I/O address, there is actually a board.
	2/ Is it bidirectionnal. In this case after putting the port in
	   input mode, we cant read no more what we wrote in it.
The bug Atari corp detected was: if there is nothing plugged in the parallel
DB25, then we always read the byte that was written in 1/. Now we send
another value for 2/.
The exit(-1) encountered if no board was detected is now replaced with
exit(0) to avoid go32 debug message when exiting.

New features for 0.94:
None. Mainly a debug release.
27/12/93: PC relative with negative offset disassembly corrected.

New features for 0.96:
- Corrected a bug in symbols handling, now symbols should appear correctly if
the file is loaded trough a filefix generated .SYM or a new aln generated
.ABS with the aread function.

- Added a command to load .ABS generated by the new ALN without the filefix
step. Try this 'aread' command and tell me if you like it. It works with all
.ABS, but the new ALN now defines symbols only once so rdbjag doesnt repeat a
symbol multiple times.

New features for 0.97:
- Corrected a bug in 'sw' function, causing rdb to print a long in place of
a word if the value was negative,
- Corrected a few bugs in the Atari version (thanks to Normen Kowalewski) :
now rdbjag wont make an infinite loop when breaking (ctrlC) while in wait.
Remember to make rdbjag.tos 'world readable' with prgflags if it hangs under
MultiTos.
- Changed (again) the way rdbjag detects the Jag parallel port on PC's. Hope
this will help.
- Changed the way rdbjag stops inverse video when reporting an error. Now it
uses ESC[0m. Looks like ANSI.SYS doesnt understand the standard ESC[27m to
stop inverse video.
- Corrected a bug causing <DEL> key not to work on PC keyboards

New features for 0.98:
- Corrected (again) a bug in inverse video handling on PC's (grin).
- Added a new switch in command line option: -d will force rdbjag to use the
parallel port specified with -p without test of parallel board. Try it if
your parallel board isn't recognized well enough.
- Added the possibility to specify in the command line the name of a .ABS
file to be 'aread'. You now can enter 'rdbjag turtdemo.abs' directly.
- Corrected a bug causing the 'write' command to append to any existing file
(thanks to John Carmack).
- Added three source level functions in rdbjag:
  'ls' will list the source code. Usage is:
  ls <addr> will list from <addr> (as before)
  ls :<#> will list line number <#> in current source file
    Ex: ls :218 will list line 218 of current module.
  ls <fname>:<#> will list line number <#> in <fname> source file
    Ex: ls main.s:420 will list line 420 of source file main.s.
  ls <fname>: will list current line number in <fname> source file
    Ex: ls main.s: will list current line of source file main.s.

  'mlist' prints a list of all source files loaded in memory. Usage is:
  mlist

  'mpurge' to unload source file(s) for small memory configurations. Usage
  is:
  mpurge <fname> will purge source file <fname> from memory.
  mpurge * will purge all source files from memory.

! In order to have the source level in your programs, you MUST use:
  MADMAC with -fb -g
  ALN with -e -g
  (please see corresponding documentation for MADMAC and ALN).
- Added the source level handling where it was useful (variables not yet
  handled: this will be 0.99):
  - after registers display (eg: 'x' but also 't', 'g' etc...).
  - the 'b' command recognizes the same syntax as 'ls'.
  - in breakpoints list.
- Changed line number management according to new MADMAC's one (-1).

New features for 0.99 ( next will be 0.99.1 :-) ):
- Added variable handling in completion and function parameters.
  Maybe too slow but quickly done (one line) and dumb (what if some label is
  to be called 'PC' ?).

New features for 1.0
- Now it should works under Windows ,386max and OS/2 VDM sessions (thanks to
Sam Littlewood from Argonaut).
- Fixed a bug in source level when more than one "aread" was called.
- Fixed a bug on Atari: "s" and "sw" were not working.
- Fixed a bug leading to hang when entering 'reload', 'unload' or 'xgoto'
  outside of a .db script (i.e when 'not loading').
- Fixed a bug in 'unalias' function. This was hanging before.
- Added a smarter 'more' everywhere it should be (I think).
- Added a new ls usage: ls <fname>: (see before).
- Now RDBJAG swaps the message number under MSDOS (for autoexecute alias)
(thanks to Glenn Williams from Williams Brothers Development).
- Added a smarter completion, context dependent.

21-mar-94:
- Added N_ASLINE source-level type symbol, so you must use MAC and ALN
  compiled at or after 21-mar-94 if you have ORG'ed GPU/DSP code and want
  to have source-level in it.

- Fixed a bug in MOVEI's display of symbols (they were swapped).
- Fixed a bug in ADDQMOD's display (1st operand was displayed in decimal
  with a '$' sign!)
- Cosmetic changes in disassembly:
	- values from 0 to 9 are displayed in decimal (so, without '$').
	- moveq.l changed to moveq
	- lea.l changed to lea
	- scc.b changed to scc
	- dbra changed to dbf
	- move.l from or to usp changed to move

- Fixed the way variable names were handled in command line/scripts.
  Debug symbols are still recognised, but they are scanned after all tries.
  This is because it slowed down everything, and it is more consistent with
  scripts. So now, globals/locals are scanned first, if it is not found then
  RDB tries to evaluate in hexadecimal, and if it doesn't succeed, it scans
  the debug symbols. If it still not found, it prints <not a number or
  variable>. That means, if your variable seems like an hexa number, you
  should prefix it with '.' (as before) otherwise it will be evaluated as a
  number.
- Added the '-g' switch in command line that performs a go command after
  initialisation (should be used as: rdbjag -g myprog). (wish from Rebellion
  Software).
- Added (well, 10 minutes!) a skip command: 'z' skips next 68K instruction.
  (z <count> skips <count> instructions).
- Added standard Motorola style CCDEFs in JR and JUMP disassembly.
- Added the "disaddr" internal variable which contains the current
  disassembly start address.
- Fixed a bug in COFF input (was forgetting last symbol).


15-apr-94:
- added a new variable: dislab which controls the way labels are
disassembled. Set to 0 if you want old fashion (default is 1).

19-apr-94:
- added a new variable: xenable which controls the x display after context
switching. Set to 1 if you want to have it. Default is 1 in non-windowed
version and 0 in windowed one (Wish from Robert Dibley, Rebellion software).
- added a new variable: srclevel which controls the source level display.
Set to 1 if you want to have it. Default is 1. (Wish from Robert Dibley,
Rebellion software).
- fixed one (very very old ...) bug in GPU/DSP disassembly of
STORE Rn,(R14/R15+n). The label given was referencing 'n' and not 'Rn'!
(This was not happening in the new label display, of course...). Thanks to
Robert Dibley from Rebellion Software.
- fixed a bug in getting line number for source level, i.e. <source>:<line>
that happened when I added handling of a current line number per source. It
was always taking the last one instead of the new one. Detected and reported
by ... guess who?

Currently in development:
- Windowed version.

TODO: What would you like us to add ?

KNOWN BUGS:
No more. Please send me bug reports, suggestions and problems
at Email:laurent@brasil.frmug.net Fax: +33 1 44 67 08 11

All new releases are on the Brainstorm/Atari France BBS in the Jaguar area.
Brasil BBS: +33 1 44 67 08 44


Best regards,

Brainstorm 27-Mar-1994.
